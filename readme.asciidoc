# Docker Recipes

## Setup

### Docker Machine

http://blog.arungupta.me/docker-machine-seutp-docker-host-techtip78

[source, text]
----
curl -L https://github.com/docker/machine/releases/download/v0.2.0/docker-machine_darwin-amd64 > /usr/local/bin/docker-machine
docker-machine create --driver virtualbox mydocker
----

### Private Registry

#### Docker Registry

#### JFrog Artifactory

## Application Server

### Single Application Server

[source, text]
----
docker run -it -p 8080:8080 jboss/wildfly
----

### Multiple Instances of an Application Server

### Load Balancing

#### Undertow

#### Apache

## Persistence

This section will explain how an Application Server and a Database server can be used to deploy an application.

### In-memory Database

http://blog.arungupta.me/javaee7-lab-wildfly-docker/

[source, text]
----
docker run -it -p 8080:8080 arungupta/javaee7-hol
----

### Same Host, Using Linking

http://blog.arungupta.me/wildfly-javaee7-mysql-link-two-docker-container-techtip65/

[source, text]
----
docker run --name mysqldb -e MYSQL_USER=mysql -e MYSQL_PASSWORD=mysql -e MYSQL_DATABASE=sample -e MYSQL_ROOT_PASSWORD=supersecret -d mysql
docker run --name mywildfly --link mysqldb:db -p 8080:8080 -d arungupta/wildfly-mysql-javaee7
docker-machine ip
curl http://<IP_ADDRESS>:8080/employees/index.html
----

### Same Host, Using Compose

[source, text]
----
curl -L https://github.com/docker/compose/releases/download/1.1.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
docker-compose up -d
docker-compose ps
docker-compose logs
docker-machine ip
curl http://<IP_ADDRESS>:8080/employees/resources/employees/
----

http://blog.arungupta.me/docker-compose-orchestrate-containers-techtip77/

### Different Hosts, Using IP Address

http://blog.arungupta.me/docker-container-linking-across-multiple-hosts-techtip69/

### Persistence on Data-only Containers



## Clustering

What are the different clustering frameworks? Where do they excel? Can they work with each other? Do they need to work with each other? Pros/cons of each framework?

[options="header"]
|====
| Framework | Pros | Cons
| Swarm | |
| Kubernetes | |
| Mesos | |
| Juju | |
|====

### Docker Swarm

http://blog.arungupta.me/clustering-docker-swarm-techtip85/

[source, text]
----
docker run swarm create
docker-machine create -d virtualbox --swarm --swarm-master --swarm-discovery token://$TOKEN swarm-master
eval "$(docker-machine env swarm-master)"
docker info
docker-machine create -d virtualbox --swarm --swarm-discovery token://$TOKEN swarm-node-01
docker-machine create -d virtualbox --swarm --swarm-discovery token://$TOKEN swarm-node-02
docker-machine ls
docker info
docker ps
----

### Kubernetes

http://blog.arungupta.me/mysql-kubernetes-service-access-wildfly-pod-techtip72/

### Mesos

TBD

### Juju

TBD

## Application Development Tooling

[options="header"]
|====
| IDE | Pros | Cons
| Eclipse | |
| NetBeans | |
| IntelliJ | |
|====

What support is offered by the three major IDEs to enable application development on Docker?

### Eclipse

http://blog.arungupta.me/deploy-wildfly-docker-eclipse/

### NetBeans

No support yet

### IntelliJ

http://blog.jetbrains.com/idea/2015/03/docker-support-in-intellij-idea-14-1/

## Testing

How do you test applications running using Docker?

### Test Java EE Applications using Arquillian Cube

http://blog.arungupta.me/run-javaee-tests-wildfly-docker-arquillian-cube/

### Docker Maven Plugin

https://github.com/rhuss/docker-maven-plugin

## PaaS

What does it take to run Docker images on PaaS?

[options="header"]
|====
| PaaS | Pros | Cons
| OpenShift | |
| Amazon | |
| Google | |
|====

### OpenShift

http://blog.arungupta.me/openshift-v3-getting-started-javaee7-wildfly-mysql/

### Amazon

### Google

## Full Stack

This section will explain how different components of a typical Java EE application can be setup using Docker.

### Messaging

### Caching

### Transactions

### Mail

### Security

http://blog.keycloak.org/2015/04/keycloak-on-kubernetes-with-openshift-3.html
